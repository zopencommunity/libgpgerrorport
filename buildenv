# bump: libgpgerror-version /LIBGPGERROR_VERSION="(.*)"/ https://gnupg.org/ftp/gcrypt/gpgrt/|re:/libgpg-error-([\d.]+).tar.bz2/$1/|semver:*
LIBGPGERROR_VERSION="1.51"

export ZOPEN_STABLE_URL="https://gnupg.org/ftp/gcrypt/gpgrt/libgpg-error-${LIBGPGERROR_VERSION}.tar.bz2"
export ZOPEN_CATEGORIES="security library"
export ZOPEN_STABLE_DEPS="make bzip2 tar curl perl automake autoconf m4 sed gettext zoslib diffutils openssl"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_NAME="libgpgerror"
export ZOPEN_COMP=CLANG

rm -f libgpgerror 
ln -s "libgpg-error-${LIBGPGERROR_VERSION}" ${ZOPEN_NAME}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"
  failures=$(egrep "^FAIL:" $chk | wc -l)
  skipped=$(egrep "^SKIP:" $chk | wc -l)
  passed=$(egrep "^PASS:" $chk | wc -l)
  totalTests=$(($failures+$skipped+$passed))

  # Echo the following information to gauge build health
cat <<ZZ
actualFailures:${failures}
totalTests:${totalTests}
expectedFailures:0
ZZ
}

zopen_append_to_env()
{
  cat <<ZZ
if [ ! -z "\$ZOPEN_IN_ZOPEN_BUILD" ]; then
   export GPGRT_CONFIG="\$PWD//bin/gpgrt-config"
   export GPG_ERROR_CONFIG="\$PWD/bin/gpg-error"
   export ZOPEN_EXTRA_CFLAGS="\${ZOPEN_EXTRA_CFLAGS} -I\$PWD/include"
   export ZOPEN_EXTRA_CXXFLAGS="\${ZOPEN_EXTRA_CXXFLAGS} -I\$PWD/include"
   export ZOPEN_EXTRA_LDFLAGS="\${ZOPEN_EXTRA_LDFLAGS} -L\$PWD/lib"
   export ZOPEN_EXTRA_LIBS="\${ZOPEN_EXTRA_LIBS} -lgpg-error"
  fi
ZZ
}

zopen_append_to_setup()
{
  # echo commands that will run when installing via setup.sh
}

zopen_get_version()
{
  echo "$LIBGPGERROR_VERSION"
}
